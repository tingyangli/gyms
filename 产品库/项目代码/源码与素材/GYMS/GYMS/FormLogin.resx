<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wGD+OLfhQX61AAAAABJRU5ErkJggg==
</value>
  </data>
</root>